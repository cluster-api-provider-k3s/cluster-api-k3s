---
name: CI Workflow

on:
  push:
    branches:
      - main
  schedule:
    - cron: "5 0 * * *" # TODO: Run every 4 hours to soak test, should be less frequent before merge (weekly/daily/???)
  workflow_dispatch:

env:
  BOOTSTRAP_IMAGE_NAME: cluster-api-provider-k3s-bootstrap
  CONTROLPLANE_IMAGE_NAME: cluster-api-provider-k3s-controlplane
  GHCR_REGISTRY: ghcr.io/${{ github.repository_owner }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  validate:
    name: "CI"
    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-go@v4
        with:
          go-version-file: "./go.mod"

      - name: GoLangCI Lint
        run: make lint

      - name: Tests - bootstrap
        run: make test-bootstrap

      - name: Tests - controlplane
        run: make test-controlplane

  build-image:
    name: Build and Push Image
    runs-on: ubuntu-latest

    permissions:
      packages: write # needed to push docker image to ghcr.io
      pull-requests: write # needed to create and update comments in PRs

    steps:
      - name: Checkout git repo
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Login to ghcr.io registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build docker - bootstrap
        run: make docker-bootstrap

      - name: Build docker - controlplane
        run: make docker-controlplane

        # If PR, put image tags in the PR comments
        # from https://github.com/marketplace/actions/create-or-update-comment
      - name: Find comment for image tags
        uses: peter-evans/find-comment@v2
        if: github.event_name == 'pull_request'
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: "github-actions[bot]"
          body-includes: Docker image tag(s) pushed

        # If PR, put image tags in the PR comments
      - name: Create or update comment for image tags
        uses: peter-evans/create-or-update-comment@v3
        if: github.event_name == 'pull_request'
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            Docker image tag(s) pushed:
            ```text
            ${{ steps.docker_meta.outputs.tags }}
            ```

            Labels added to images:
            ```text
            ${{ steps.docker_meta.outputs.labels }}
            ```
          edit-mode: replace

    outputs:
      image-tag: "${{ steps.docker_meta.outputs.version }}"

  release-manifests:
    name: Make Release Manifests
    runs-on: ubuntu-latest
    needs: [build-image]
    env:
      TAG: ${{ needs.build-image.outputs.image-tag }}

    steps:
      - name: checkout
        uses: actions/checkout@v3

      - uses: actions/setup-go@v4
        with:
          go-version-file: "./go.mod"

      - name: Make Release
        run: make release

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: release-manifests
          path: out/release
